<nav aria-label="breadcrumb" class="mb-3 mt-2">
  <ol class="breadcrumb bg-transparent">
    <li class="breadcrumb-item">
      <i class="bi bi-person-circle me-1"></i>
      <span class="text-muted">Subscriber Number -</span>
      <strong>7508788105</strong>
    </li>
  </ol>
</nav>

<nav aria-label="breadcrumb" class="mb-4">
  <ol class="breadcrumb bg-light px-3 py-2 rounded">
    <li class="breadcrumb-item">
      <a href="/" class="text-decoration-none">
        <i class="bi bi-house-door me-1"></i>Home
      </a>
    </li>
    <li class="breadcrumb-item">
      <a href="/free-units/view" class="text-decoration-none">
        <i class="bi bi-gift me-1"></i>FreeUnits
      </a>
    </li>
    <li class="breadcrumb-item">
      <a href="#" class="text-decoration-none">
        <i class="bi bi-wallet2 me-1"></i>AccountBalance
      </a>
    </li>
  </ol>
</nav>

<div class="container-fluid px-4">
  <!-- Page Header with gradient background -->
  <div class="page-header-card mb-4">
    <div class="d-flex justify-content-between align-items-center">
      <div>
        <h4 class="page-title mb-2">
          <i class="bi bi-tag-fill me-2"></i>Offers Management
        </h4>
        <p class="page-subtitle mb-0">Manage subscriber offers and packages</p>
      </div>
      <div class="d-flex gap-2">
        <button class="btn btn-add-custom" type="button">
          <i class="bi bi-plus-circle me-2"></i>Add Offer
        </button>
        <button class="btn btn-delete-custom" type="button" id="deleteAllBtn">
          <i class="bi bi-trash-fill me-2"></i>Delete All
        </button>
      </div>
    </div>
  </div>

  <!-- Offers Table -->
  <div class="offers-table-wrapper">
    <div class="table-header">
      <h5 class="table-title mb-0">
        <i class="bi bi-list-ul me-2"></i>List of Offers
      </h5>
      <span class="offer-count-badge">
        <%= offerings.raw ? offerings.raw.length : 0 %> Offers
      </span>
    </div>

    <div class="table-container">
      <table class="custom-table">
        <thead>
          <tr>
            <th class="th-offer-id"><i class="bi bi-hash me-1"></i>Offer ID</th>
            <th class="th-offer-name">
              <i class="bi bi-tag-fill me-1"></i>Offer Name
            </th>
            <th class="th-purchase-seq">
              <i class="bi bi-sort-numeric-down me-1"></i>Purchase Sequence
            </th>
            <th class="th-action text-center">
              <i class="bi bi-gear-fill me-1"></i>Action
            </th>
          </tr>
        </thead>
        <tbody>
          <% if (offerings.raw && offerings.raw.length > 0) { %> <%
          offerings.raw.forEach((offering, index) => { %>
          <tr>
            <td class="td-offer-id">
              <span class="offer-id-badge">#<%= offering.OfferingID %></span>
            </td>
            <td class="td-offer-name"><%= offering.OfferingName %></td>
            <td class="td-purchase-seq">
              <span class="seq-badge"> Seq: <%= offering.PurchaseSeq %> </span>
            </td>
            <td class="td-action text-center">
              <button
                type="button"
                class="btn-delete-row"
                title="Delete Offer"
                data-offer-id="<%= offering.OfferingID %>"
                data-purchase-seq="<%= offering.PurchaseSeq %>"
              >
                <i class="bi bi-trash me-1"></i>Delete
              </button>
            </td>
          </tr>
          <% }) %> <% } else { %>
          <tr>
            <td colspan="4" class="empty-state">
              <div class="empty-content">
                <i class="bi bi-inbox empty-icon"></i>
                <h5 class="empty-title">No offers found</h5>
                <p class="empty-text">
                  Click "Add Offer" to create your first offer
                </p>
              </div>
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<style>
  /* Page Header Card */
  .page-header-card {
    background: linear-gradient(135deg, #0c4a6e 0%, #075985 100%);
    padding: 1.25rem 1.5rem;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(12, 74, 110, 0.2);
    color: white;
  }

  .page-title {
    font-size: 1.25rem;
    font-weight: 700;
    margin: 0;
    color: white;
  }

  .page-subtitle {
    font-size: 0.85rem;
    color: rgba(255, 255, 255, 0.85);
  }

  /* Custom Buttons */
  .btn-add-custom {
    background: linear-gradient(135deg, #059669 0%, #10b981 100%);
    color: white;
    border: none;
    padding: 0.5rem 1.25rem;
    border-radius: 8px;
    font-weight: 600;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(5, 150, 105, 0.3);
  }

  .btn-add-custom:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(5, 150, 105, 0.4);
    background: linear-gradient(135deg, #047857 0%, #059669 100%);
    color: white;
  }

  .btn-delete-custom {
    background: linear-gradient(135deg, #dc2626 0%, #ef4444 100%);
    color: white;
    border: none;
    padding: 0.5rem 1.25rem;
    border-radius: 8px;
    font-weight: 600;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3);
  }

  .btn-delete-custom:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(220, 38, 38, 0.4);
    background: linear-gradient(135deg, #b91c1c 0%, #dc2626 100%);
    color: white;
  }

  /* Breadcrumb Styling */
  .breadcrumb {
    background: transparent;
    padding: 0.5rem 0;
    margin-bottom: 0;
  }

  .breadcrumb-item a {
    color: #0c4a6e;
    transition: color 0.2s ease;
  }

  .breadcrumb-item a:hover {
    color: #075985;
  }

  /* Table Wrapper */
  .offers-table-wrapper {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
    overflow: hidden;
  }

  .table-header {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    padding: 1.25rem 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 2px solid #cbd5e1;
  }

  .table-title {
    font-size: 1.15rem;
    font-weight: 700;
    color: #0f172a;
    display: flex;
    align-items: center;
  }

  .offer-count-badge {
    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
    color: white;
    padding: 0.4rem 1rem;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 600;
    box-shadow: 0 2px 6px rgba(59, 130, 246, 0.3);
  }

  /* Table Container */
  .table-container {
    overflow-x: auto;
  }

  .custom-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    margin: 0;
  }

  /* Table Head */
  .custom-table thead {
    background: #0c4a6e;
    color: white;
  }

  .custom-table thead th {
    padding: 1rem 1.5rem;
    font-weight: 600;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border: none;
  }

  .custom-table thead th:first-child {
    border-top-left-radius: 0;
  }

  .custom-table thead th:last-child {
    border-top-right-radius: 0;
  }

  /* Table Body */
  .custom-table tbody tr {
    background: white;
    transition: all 0.2s ease;
    border-bottom: 1px solid #e2e8f0;
  }

  .custom-table tbody tr:hover {
    background: #f1f5f9;
    transform: scale(1.001);
  }

  .custom-table tbody tr:last-child {
    border-bottom: none;
  }

  .custom-table tbody td {
    padding: 1.25rem 1.5rem;
    vertical-align: middle;
    color: #334155;
    font-size: 0.95rem;
  }

  /* Table Cell Specific Styles */
  .offer-id-badge {
    background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
    color: #1e40af;
    padding: 0.35rem 0.85rem;
    border-radius: 6px;
    font-weight: 700;
    font-size: 0.9rem;
    display: inline-block;
  }

  .td-offer-name {
    font-weight: 600;
    color: #0f172a;
  }

  .seq-badge {
    background: #f1f5f9;
    color: #475569;
    padding: 0.35rem 0.85rem;
    border-radius: 6px;
    font-size: 0.85rem;
    font-weight: 600;
    border: 1px solid #cbd5e1;
    display: inline-block;
  }

  /* Delete Button in Row */
  .btn-delete-row {
    background: white;
    color: #dc2626;
    border: 2px solid #dc2626;
    padding: 0.45rem 1.25rem;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.85rem;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .btn-delete-row:hover {
    background: #dc2626;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(220, 38, 38, 0.3);
  }

  /* Empty State */
  .empty-state {
    padding: 4rem 2rem !important;
    text-align: center;
  }

  .empty-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  .empty-icon {
    font-size: 4rem;
    color: #cbd5e1;
  }

  .empty-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #475569;
    margin: 0;
  }

  .empty-text {
    color: #94a3b8;
    margin: 0;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .page-header-card {
      padding: 1.5rem;
    }

    .page-header-card .d-flex {
      flex-direction: column;
      gap: 1rem;
      align-items: flex-start !important;
    }

    .page-header-card .d-flex > div:last-child {
      width: 100%;
    }

    .page-header-card .btn {
      width: 100%;
    }

    .table-header {
      flex-direction: column;
      gap: 1rem;
      align-items: flex-start !important;
    }

    .custom-table {
      font-size: 0.85rem;
    }

    .custom-table thead th,
    .custom-table tbody td {
      padding: 0.75rem 1rem;
    }
  }
</style>

<script>
  document.querySelectorAll('button[title="Delete Offer"]').forEach((btn) => {
    btn.addEventListener("click", async () => {
      const offerId = btn.dataset.offerId;
      const purchaseSeq = btn.dataset.purchaseSeq;

      const confirmResult = await Swal.fire({
        title: "Are you sure?",
        text: `Delete offer ID ${offerId}?`,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#dc2626",
        cancelButtonColor: "#64748b",
        confirmButtonText:
          '<i class="bi bi-check-circle me-2"></i>Yes, delete it!',
        cancelButtonText: '<i class="bi bi-x-circle me-2"></i>Cancel',
        customClass: {
          popup: "swal-custom-popup",
          confirmButton: "swal-custom-confirm",
          cancelButton: "swal-custom-cancel",
        },
      });

      if (!confirmResult.isConfirmed) {
        return;
      }

      const response = await fetch("/offers/delete", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          offeringId: offerId,
          purchaseSeqId: purchaseSeq,
        }),
      });

      const result = await response.json();
      Swal.fire({
        title: "Deleted!",
        text: `Offer ID ${offerId} has been deleted successfully.`,
        icon: "success",
        timer: 1500,
        showConfirmButton: false,
        customClass: {
          popup: "swal-custom-popup",
        },
        willClose: () => {
          location.reload();
        },
      });
    });
  });
</script>

<script>
  document
    .getElementById("deleteAllBtn")
    .addEventListener("click", async () => {
      const rows = document.querySelectorAll("tbody tr");
      const offers = [];

      rows.forEach((row) => {
        const deleteBtn = row.querySelector("button[data-offer-id]");
        if (deleteBtn) {
          offers.push({
            offeringId: deleteBtn.dataset.offerId,
            purchaseSeqId: deleteBtn.dataset.purchaseSeq,
          });
        }
      });

      if (offers.length === 0) {
        Swal.fire({
          title: "No offers found!",
          text: "There are no offers to delete.",
          icon: "info",
          confirmButtonColor: "#0c4a6e",
          customClass: {
            popup: "swal-custom-popup",
            confirmButton: "swal-custom-confirm",
          },
        });
        return;
      }

      const confirm = await Swal.fire({
        title: "Delete All Offers?",
        html: `
          <p>You are about to delete <strong>${offers.length}</strong> offer${
          offers.length > 1 ? "s" : ""
        }.</p>
          <p class="text-muted mb-0">This action cannot be undone!</p>
        `,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#dc2626",
        cancelButtonColor: "#64748b",
        confirmButtonText:
          '<i class="bi bi-trash-fill me-2"></i>Yes, delete all!',
        cancelButtonText: '<i class="bi bi-x-circle me-2"></i>Cancel',
        customClass: {
          popup: "swal-custom-popup",
          confirmButton: "swal-custom-confirm",
          cancelButton: "swal-custom-cancel",
        },
      });

      if (!confirm.isConfirmed) return;

      Swal.fire({
        title: "Deleting Offers...",
        html: `
        <div id="progress-text" class="mb-3 fw-bold" style="color: #0c4a6e;">Initializing deletion process...</div>
        <div class="progress" style="height: 28px; border-radius: 14px; overflow: hidden;">
          <div id="progress-bar" 
               class="progress-bar progress-bar-striped progress-bar-animated" 
               style="width: 0%; background: linear-gradient(135deg, #dc2626 0%, #ef4444 100%);" 
               role="progressbar">
            <span style="font-weight: 600;">0%</span>
          </div>
        </div>
        <div class="mt-3" style="color: #64748b; font-size: 0.95rem;">
          <strong><span id="deleted-count">0</span></strong> of <strong><span id="total-count">${offers.length}</span></strong> offers deleted
        </div>
      `,
        allowOutsideClick: false,
        allowEscapeKey: false,
        showConfirmButton: false,
        customClass: {
          popup: "swal-custom-popup",
        },
        didOpen: async () => {
          const progressBar = document.getElementById("progress-bar");
          const progressText = document.getElementById("progress-text");
          const deletedCount = document.getElementById("deleted-count");

          let completed = 0;
          for (const offer of offers) {
            progressText.innerText = `Deleting Offer ID: ${offer.offeringId}`;
            try {
              await fetch("/offers/delete", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(offer),
              });
            } catch (err) {
              console.error("Error deleting:", offer, err);
            }
            completed++;
            deletedCount.innerText = completed;
            const percent = Math.round((completed / offers.length) * 100);
            progressBar.style.width = `${percent}%`;
            progressBar.querySelector("span").innerText = `${percent}%`;
          }

          progressText.innerHTML =
            '<i class="bi bi-check-circle-fill me-2" style="color: #10b981;"></i>All offers deleted successfully!';
          progressBar.classList.remove("progress-bar-animated");
          progressBar.style.background =
            "linear-gradient(135deg, #10b981 0%, #059669 100%)";

          await new Promise((res) => setTimeout(res, 1200));
          Swal.close();
          location.reload();
        },
      });
    });
</script>
